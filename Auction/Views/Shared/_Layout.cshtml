<!DOCTYPE html>

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <!--link href="~/css/bootstrap.min.css" rel="stylesheet" type="text/css"-->
    <link href="~/css/LotsListStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/HeaderStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/LotDetailStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/FormStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/ProfileStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/UsersListStyles.css" rel="stylesheet" type="text/css">
    <link href="~/css/GeneralStyles.css" rel="stylesheet" type="text/css">
</head>
<body>
    <header>
        <nav>
            <div class="nav-bar">
                <ul class="nav-list">
                    <li class="nav-item">
                        <a class="nav-ref" asp-controller="Lots" asp-action="ActualLots">
                            <div>@Localizer["ActualLots"]</div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-ref" asp-controller="Lots" asp-action="EndedLots">
                            <div>@Localizer["EndedLots"]</div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-ref" asp-controller="Lots" asp-action="Create">
                            <div>@Localizer["CreateLot"]</div>
                        </a>
                    </li>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                    {
                        <li class="nav-item">
                            <a class="nav-ref" asp-controller="Users" asp-action="Index">
                                <div>@Localizer["UsersList"]</div>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-ref" asp-controller="Users" asp-action="Create">
                                <div>@Localizer["CreateUser"]</div>
                            </a>
                        </li>
                    }
                </ul>
                <ul class="nav-list nav-list-right">
                    <li id="languageSelector" class="nav-item">
                        @await Html.PartialAsync("_LanguageSelectorPartial")
                    </li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            <a class="nav-ref" asp-controller="Account" asp-action="Profile">
                                <div>@User.Identity.Name</div>
                            </a>
                        </li>
                        <li class="nav-item-button">
                            <form method="post" asp-controller="Account" asp-action="LogOff">
                                <input id="exit-button" class="action-link-default button-black" type="submit" value="@Localizer["LogOut"]" />
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-ref" asp-controller="Account" asp-action="Login">
                                <div>@Localizer["LogIn"]</div>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-ref" asp-controller="Account" asp-action="Register">
                                <div>@Localizer["Register"]</div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </nav>
        <partial name="_CookieConsentPartial" />
    </header>
    <main>
        @RenderBody()
    </main>
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <!--RenderSection("Scripts", required: false)-->
</body>
</html>
<script src="~/js/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/notifications")
        .build();
    hubConnection.on('Notify', function (message) {
            alert(message);
    });
    hubConnection.start();
</script>
